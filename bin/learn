#!/usr/bin/env python3

import os
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from prediction import Baseline
from prediction import Config
from prediction import Experiment
from prediction import Input
from prediction import Manager
from prediction import Random
from prediction import support
import argparse
import json

def main(config):
    support.loggalize()
    Random.initialize(config.seed)
    input = Input(config.input)
    path = config.output.get('path', support.default_output())
    config.output.path = os.path.join(path, 'baseline')
    baseline = Baseline(input, config)
    baseline.run_comparison('validation')
    baseline.run_comparison('testing')
    config.output.path = os.path.join(path, 'experiment')
    experiment = Experiment(input, config)
    manager = Manager(config.manager)
    while True:
        try:
            while True:
                experiment.run_training()
                if manager.should_backup(experiment.state):
                    experiment.run_backup()
                if manager.should_validation(experiment.state):
                    experiment.run_validation()
        except KeyboardInterrupt:
            print()
        i = support.ask('Abort', 'Continue training',
                        'Stop training and start testing')
        if i == 0:
            return
        elif i == 1:
            continue
        elif i == 2:
            experiment.run_comparison('validation')
            experiment.run_comparison('testing')
            return

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--config', required=True)
    parser.add_argument('--input')
    parser.add_argument('--output')
    arguments = parser.parse_args()
    config = Config(json.loads(open(arguments.config).read()))
    if arguments.input is not None:
        config.input.path = arguments.input
    if arguments.output is not None:
        config.output.path = arguments.output
    main(config)
